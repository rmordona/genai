import genai as ai
import numpy as np

dtype = "double"
modelgraph = ai.Model(datatype=dtype);
node1  = modelgraph.addNode("node1", ai.NodeType.Generic);
node2  = modelgraph.addNode("node2", ai.NodeType.Generic);

node1.setOperations([
                ai.LSTM(hidden_size=5, 
                        output_size=5, 
                        num_layers=1, 
                        bidirectional=True, 
                        rnntype=ai.RNNtype.MANY_TO_MANY), 
                ai.Activation(type="leakyrelu", alpha=0.01)]
                   );

x = [[
        [-0.62000191, -1.27273846,  0.64314526,  1.4581964 , -1.41556358],
        [-0.62000191, -1.27273846,  0.64314526,  1.4581964 , -1.41556358],
        [-0.62000191, -1.27273846,  0.64314526,  1.4581964 , -1.41556358],
        [-0.62000191, -1.27273846,  0.64314526,  1.4581964 , -1.41556358],
        [-0.62000191, -1.27273846,  0.64314526,  1.4581964 , -1.41556358]  ],
       [[ 3.6680336 , -4.72590256,  1.79263234,  2.09708142, 3.62206459],
        [ 3.6680336 , -4.72590256,  1.79263234,  2.09708142, 3.62206459],
        [ 3.6680336 , -4.72590256,  1.79263234,  2.09708142, 3.62206459],
        [ 3.6680336 , -4.72590256,  1.79263234,  2.09708142, 3.62206459],
        [ 3.6680336 , -4.72590256,  1.79263234,  2.09708142, 3.62206459]],
       [[-0.62838537, -1.52371931,  0.60713536,  2.18721867, -1.07151377],
        [-0.62838537, -1.52371931,  0.60713536,  2.18721867, -1.07151377],
        [-0.62838537, -1.52371931,  0.60713536,  2.18721867, -1.07151377],
        [-0.62838537, -1.52371931,  0.60713536,  2.18721867, -1.07151377],
        [-0.62838537, -1.52371931,  0.60713536,  2.18721867, -1.07151377]],
       [[-0.64610696, -3.03179026,  0.65387177,  1.55924249, -1.79662549],
        [-0.64610696, -3.03179026,  0.65387177,  1.55924249, -1.79662549],
        [-0.64610696, -3.03179026,  0.65387177,  1.55924249, -1.79662549],
        [-0.64610696, -3.03179026,  0.65387177,  1.55924249, -1.79662549],
        [-0.64610696, -3.03179026,  0.65387177,  1.55924249, -1.79662549]],
       [[-1.4518218 , -2.77096462,  1.2759279 ,  2.18078423, -1.42411494],
        [-1.4518218 , -2.77096462,  1.2759279 ,  2.18078423, -1.42411494],
        [-1.4518218 , -2.77096462,  1.2759279 ,  2.18078423, -1.42411494],
        [-1.4518218 , -2.77096462,  1.2759279 ,  2.18078423, -1.42411494],
        [-1.4518218 , -2.77096462,  1.2759279 ,  2.18078423, -1.42411494]]];


x1 = [
               [  [1.11,1.12,1.13,1.14],  [1.21,1.22,1.23,1.24], [1.31,1.32,1.33,1.34]  ], # sequence 1 of batch 1,2,3
               [  [2.11,2.12,2.13,2.14],  [2.21,2.22,2.23,2.24], [2.31,2.32,2.33,2.34]  ], # sequence 2 of batch 1,2,3
               [  [3.11,3.12,3.13,3.14],  [3.21,3.22,3.23,3.24], [3.31,3.32,3.33,3.34]  ], # sequence 3 of batch 1,2,3
               [  [4.11,4.12,4.13,4.14],  [4.21,4.22,4.23,3.24], [4.31,4.32,4.33,5.34]  ], # sequence 4 of batch 1,2,3
               [  [5.11,5.12,5.13,5.14],  [5.21,5.22,5.23,3.24], [5.31,5.32,5.33,5.34]  ]  # sequence 5 of batch 1,2,3
             ];


node1.setData(data = x, normalize=True);

node2.setOperations([ai.Dense(size=5, bias=True), ai.Activation(type="leakyrelu", alpha=0.01)])

modelgraph.connect(node1, node2);


y = x

# Set The target
modelgraph.setTarget(data = y);

# Perform fitting
modelgraph.train(loss="mse", metrics=[], optimizer="adam", learn_rate=0.1, max_epoch=3000);
